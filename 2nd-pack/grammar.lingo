
expr = add;

add = (sub):l ws "+" ws expr:r {Add(:l, :r)} | sub;
sub = (mult):l ws nextsub*:r {eatSubs(:l, :r)};
nextsub = ws "-" ws mult:t {:t};

mult = div:l ws "*" ws (mult):r {Mult(:l, :r)} | div;   
div = neg:l ws nextdiv*:r {eatDivs(:l, :r)};
nextdiv = ws "/" ws neg:d {:d};

neg = ws "-" ws neg:t {Neg(:t)} | value;
value = num | variable | '('ws expr:t ws')' {:t};
num = digit$s {Num(s2i($s))};
variable = name$s {Var($s)};
name = ('a' - 'z')+;
digit = ('0' - '9')+;
ws = (' '| '\t' | '\n' | '\r')*;