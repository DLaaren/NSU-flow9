// 1. Реализуйте калькулятор для обратной польской записи (RPN) арифметических выражений. 
// 2. Напишите функции перевода арифметический выражений в RPN и наоборот.

import lingo/pegcode/driver;
import string;
import math/math;

import postfix;

lingoRPNGrammar() {
    compilePegGrammar("#include postfix.lingo");
}

main() {
    // get an RPNexpression
    RPNexpr = getUrlParameter("RPNexpr");

    usage : string = "Usage: postfix_calculator.flow -- \"RPNexpr=<RPNexpression>\"";
	
    if (RPNexpr == "") {
		println("Expression expected");
		println(usage);
		quit(-1);
	} else {
        RPNe : [RPNExpression] = parsic(lingoRPNGrammar(), RPNexpr, defaultPegActions);
        println(RPNe);

        switch(RPNcalculate(RPNe)) {
            Some(result)    : println(PostfixToString(RPNe) + " = " + d2s(result));
            None()          : println("Error while calculating");
        }

        eInf = translateToInfix(RPNe);
        println("translating to infix notation");
        switch(eInf) {
            Some(result) : {
                println(result);
                println(InfixToString(result));

                println("and back"); 
                ePost = translateToPostfix(result);
                switch(ePost) {
                    Some(res) : {
                        println(res);
                        println(PostfixToString(res));
                    }
                    None() : println("Error while translating to postfix");
                }
            }
            None() : println("Error while translating to infix");
        }
        
		quit(0);
	}
}